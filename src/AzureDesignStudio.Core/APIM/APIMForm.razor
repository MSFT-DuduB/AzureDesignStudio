@using AzureDesignStudio.Core.Components
@using AzureDesignStudio.Core.VirtualNetwork
@using Blazor.Diagrams.Core
@using Blazor.Diagrams.Core.Models

<Form Model="@apim" LabelColSpan="8" WrapperColSpan="16" Size="@AntSizeLDSType.Small">
    <NameAndLocation Node="@context" />
    <FormItem>
        <SimpleSelect @bind-Value="@context.SkuName">
            <SelectOptions>
                <SimpleSelectOption Label="Developer" Value="@("Developer")" />
                <SimpleSelectOption Label="Consumption" Value="@("Consumption")" Disabled="@(context.Group is SubnetModel)" />
                <SimpleSelectOption Label="Basic" Value="@("Basic")" Disabled="@(context.Group is SubnetModel)" />
                <SimpleSelectOption Label="Standard" Value="@("Standard")" Disabled="@(context.Group is SubnetModel)" />
                <SimpleSelectOption Label="Premium" Value="@("Premium")" />
                <SimpleSelectOption Label="Isolated" Value="@("Isolated")" />
            </SelectOptions>
        </SimpleSelect>
    </FormItem>
    @if (context.SkuName != "Consumption")
    {
        <FormItem>
            <InputNumber @bind-Value="@context.SkuCapacity"></InputNumber>
        </FormItem>
    }
    <FormItem LabelColSpan="@null" WrapperColSpan="@null">
        <Input @bind-Value="@context.PublisherName"></Input>
    </FormItem>
    <FormItem LabelColSpan="@null" WrapperColSpan="@null">
        <Input @bind-Value="@context.PublisherEmail"></Input>
    </FormItem>
    @if (context.Group is SubnetModel)
    {
        <FormItem>
            <RadioGroup @bind-Value="@context.VnetType" ButtonStyle="@RadioButtonStyle.Solid" Size="small">
                <Radio RadioButton Value="@("External")">External</Radio>
                <Radio RadioButton Value="@("Internal")">Internal</Radio>
            </RadioGroup>
        </FormItem>        
    }
</Form>

@code {
    [CascadingParameter]
    public NodeModel Node { get; set; } = null!;
    [CascadingParameter]
    public Diagram Diagram { get; set; } = null!;

    private APIMModel apim = null!;

    protected override void OnInitialized()
    {
        base.OnInitialized();

        apim = (Node as APIMModel)!;
    }
}
