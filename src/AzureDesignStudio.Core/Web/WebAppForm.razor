@using AzureDesignStudio.Core.Components
@using Blazor.Diagrams.Core
@using Blazor.Diagrams.Core.Models

<Form Model="@webApp" LabelColSpan="6" WrapperColSpan="18" Size="@AntSizeLDSType.Small">
    <NameAndLocation Node="@context" />
    <FormItem>
        <RadioGroup @bind-Value="@context.Publish" ButtonStyle="@RadioButtonStyle.Solid" Size="small">
            <Radio RadioButton Value="@("code")">Code</Radio>
            <Radio RadioButton Value="@("docker")">Docker container</Radio>
        </RadioGroup>
    </FormItem>
    @if (context.Publish == "code")
    {
        <FormItem>
            <Cascader @bind-Value="@context.RuntimeStack" Options="@RuntimStackOptions" ExpandTrigger="hover" 
                SelectedNodesChanged="@HandleCascaderChange" />
        </FormItem>
    }
    <FormItem>
        <RadioGroup @bind-Value="@context.ServicePlanOS" ButtonStyle="@RadioButtonStyle.Solid" Size="small">
            <Radio RadioButton Value="@("linux")" Disabled="@DisableLinuxOption">Linux</Radio>
            <Radio RadioButton Value="@("windows")" Disabled="@DisableWindowsOption">Windows</Radio>
        </RadioGroup>
    </FormItem>
    @if (ChildContent is not null)
    {
        @ChildContent
    }
</Form>

@code {
    [CascadingParameter]
    public NodeModel Node { get; set; } = null!;
    [CascadingParameter]
    public Diagram Diagram { get; set; } = null!;

    protected List<CascaderNode> RuntimStackOptions = null!;
    protected RenderFragment ChildContent = null!;

    private WebAppModel webApp => (Node as WebAppModel)!;
    protected override void OnInitialized()
    {
        PopulateRuntimeStackOptions();

        base.OnInitialized();
    }
}
