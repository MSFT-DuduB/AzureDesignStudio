@using System.Text
@inherits FeedbackComponent<string, string>
@inject IJSRuntime JS

<Affix TargetSelector=".ant-drawer-body" OnChange="HandleAffixChange">
    <Button Icon="download" Style="@buttonStyle" OnClick="HandleButtonClick">Download</Button>
</Affix>
<pre class="line-numbers language-json"><code>
    @json
</code></pre>

@code {
    private string json = null!;
    private const string upperRight = "position:absolute;top:86px;right:41px;z-index:10";
    private string buttonStyle = upperRight;

    protected override Task OnInitializedAsync()
    {
        json = Options;
        return base.OnInitializedAsync();
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await base.OnAfterRenderAsync(firstRender);

        await JS.InvokeVoidAsync("Prism.highlightAll");
    }

    void HandleAffixChange(bool status)
    {
        if (status)
        {
            buttonStyle = "float:right;";
        }
        else
        {
            buttonStyle = upperRight;
        }
    }

    async Task HandleButtonClick()
    {
        await DownloadFile(json, "azure-design-studio.json", "application/json");
    }

    // According to: https://docs.microsoft.com/en-us/aspnet/core/blazor/file-downloads?view=aspnetcore-6.0
    private async Task DownloadFile(string content, string filename, string contentType)
    {
        var stream = new MemoryStream(Encoding.UTF8.GetBytes(content));
        using var streamRef = new DotNetStreamReference(stream);
        await JS.InvokeVoidAsync("downloadFileFromStream", filename, contentType, streamRef);
    }
}
